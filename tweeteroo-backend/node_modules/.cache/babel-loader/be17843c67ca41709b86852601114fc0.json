{"ast":null,"code":"var _jsxFileName = \"/Users/anahristoff/Library/Mobile Documents/com~apple~CloudDocs/Lukas/Driven/projetao-trackit/src/components/SignUpPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Container, Grid, StyledLink } from \"./styles\";\nimport { useState } from 'react';\nimport Input from \"../Input\";\nimport Button from \"../Button\";\nimport BigLogo from \"../BigLogo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUpPage() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [image, setImage] = useState('');\n\n  function handleSignUp(e) {\n    e.preventDefault();\n    const promise = axios.post('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/auth/sign-up', {\n      email,\n      name,\n      image,\n      password\n    });\n    promise.then(response => console.log(response));\n    promise.catch(error => console.log(error.response));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(BigLogo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSignUp,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        onChange: e => setEmail(e.target.value),\n        value: email,\n        placeholder: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        onChange: e => setPassword(e.target.value),\n        value: password,\n        placeholder: \"senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        onChange: e => setName(e.target.value),\n        value: name,\n        placeholder: \"nome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        onChange: e => setImage(e.target.value),\n        value: image,\n        placeholder: \"foto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StyledLink, {\n      to: \"/\",\n      children: \"N\\xE3o tem uma conta? Fa\\xE7a login!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUpPage, \"fINxbgSqtcIPRvr6igj+a5JleS0=\");\n\n_c = SignUpPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"sources":["/Users/anahristoff/Library/Mobile Documents/com~apple~CloudDocs/Lukas/Driven/projetao-trackit/src/components/SignUpPage/index.js"],"names":["React","axios","Container","Grid","StyledLink","useState","Input","Button","BigLogo","SignUpPage","email","setEmail","password","setPassword","name","setName","image","setImage","handleSignUp","e","preventDefault","promise","post","then","response","console","log","catch","error","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { Container, Grid, StyledLink } from \"./styles\";\nimport { useState } from 'react';\nimport Input from \"../Input\";\nimport Button from \"../Button\";\nimport BigLogo from \"../BigLogo\";\n\n\nexport default function SignUpPage() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [name, setName] = useState('');\n    const [image, setImage] = useState('');\n\n    \n    function handleSignUp(e) {\n        e.preventDefault();\n\n        const promise = axios.post('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/auth/sign-up', {\n            email,\n            name,\n            image,\n            password\n        });\n        promise.then(response => console.log(response));\n        promise.catch(error => console.log(error.response));\n    }\n\n    return (\n        <Container>\n            <BigLogo />\n            <form onSubmit={handleSignUp}>\n                <Input type='email' onChange={(e) => setEmail(e.target.value)} value={email} placeholder=\"email\"/>\n                <Input type='password' onChange={(e) => setPassword(e.target.value)} value={password} placeholder=\"senha\"/>\n                <Input type='text' onChange={(e) => setName(e.target.value)} value={name} placeholder=\"nome\"/>\n                <Input type='text' onChange={(e) => setImage(e.target.value)} value={image} placeholder=\"foto\"/>\n                <Button type=\"submit\">Cadastrar</Button>\n            </form>\n            <StyledLink to=\"/\">Não tem uma conta? Faça login!</StyledLink>\n        </Container>\n    );\n}"]},"metadata":{},"sourceType":"module"}