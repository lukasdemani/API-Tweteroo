{"ast":null,"code":"var _jsxFileName = \"/Users/anahristoff/Library/Mobile Documents/com~apple~CloudDocs/Lukas/Driven/projetao-trackit/src/components/AddHabbitForm/index.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Grid, Day, SaveButton, CancelButton } from \"./styles\";\nimport Input from \"../Input\";\nimport { useContext, useState } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../../contexts/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddHabbitForm(_ref) {\n  _s();\n\n  let {\n    displayForm,\n    setDisplayForm,\n    habits,\n    setHabits\n  } = _ref;\n  const dayweek = [{\n    id: 0,\n    label: 'D'\n  }, {\n    id: 1,\n    label: 'S'\n  }, {\n    id: 2,\n    label: 'T'\n  }, {\n    id: 3,\n    label: 'Q'\n  }, {\n    id: 4,\n    label: 'Q'\n  }, {\n    id: 5,\n    label: 'S'\n  }, {\n    id: 6,\n    label: 'S'\n  }];\n  const [selectedDays, setSelectedDays] = useState([]);\n  const [newHabit, setNewHabit] = useState('');\n  const {\n    token\n  } = useContext(UserContext);\n\n  function handleDaySelected(day) {\n    setSelectedDays([...selectedDays, day.id]);\n  }\n\n  function handleHabit(e) {\n    e.preventDefault();\n    const promise = axios.post('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits', {\n      name: newHabit,\n      days: selectedDays\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    promise.then(response => {\n      setHabits(response);\n    });\n    promise.catch(error => console.log(error.response));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    displayForm: displayForm,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleHabit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        onChange: e => setNewHabit(e.target.value),\n        value: newHabit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: dayweek.map(day => /*#__PURE__*/_jsxDEV(Day, {\n          onClick: () => handleDaySelected(day),\n          isSelected: selectedDays.includes(day.id),\n          children: day.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 44\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CancelButton, {\n        onClick: () => setDisplayForm('none'),\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SaveButton, {\n        type: \"submit\",\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddHabbitForm, \"dS83DZorCZYBlBIB1cV7NSer974=\");\n\n_c = AddHabbitForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddHabbitForm\");","map":{"version":3,"sources":["/Users/anahristoff/Library/Mobile Documents/com~apple~CloudDocs/Lukas/Driven/projetao-trackit/src/components/AddHabbitForm/index.js"],"names":["Container","Grid","Day","SaveButton","CancelButton","Input","useContext","useState","React","axios","UserContext","AddHabbitForm","displayForm","setDisplayForm","habits","setHabits","dayweek","id","label","selectedDays","setSelectedDays","newHabit","setNewHabit","token","handleDaySelected","day","handleHabit","e","preventDefault","promise","post","name","days","headers","Authorization","then","response","catch","error","console","log","target","value","map","includes"],"mappings":"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","sourcesContent":["import { Container, Grid, Day, SaveButton, CancelButton } from \"./styles\";\nimport Input from \"../Input\";\nimport { useContext, useState } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../../contexts/UserContext\";\n\nexport default function AddHabbitForm({ displayForm, setDisplayForm, habits, setHabits }) {\n    const dayweek = [\n        {id:0, label: 'D'},\n        {id:1, label: 'S'},\n        {id:2, label: 'T'},\n        {id:3, label: 'Q'},\n        {id:4, label: 'Q'},\n        {id:5, label: 'S'},\n        {id:6, label: 'S'}\n    ];\n    const [selectedDays, setSelectedDays] = useState([]);\n    const [newHabit, setNewHabit] = useState('');\n    const { token } = useContext(UserContext);\n\n    function handleDaySelected(day){\n        setSelectedDays([...selectedDays, day.id]);\n    }\n    \n    function handleHabit(e){\n        e.preventDefault();\n\n        const promise = axios.post('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits', {\n                name: newHabit,\n                days: selectedDays\n            },{\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n            });\n        promise.then(response => {\n            setHabits(response)\n        });\n        promise.catch(error => console.log(error.response));\n    }\n    \n    return (\n        <Container displayForm={displayForm}>\n            <form onSubmit={handleHabit}>\n                <Input type='text' onChange={(e) => setNewHabit(e.target.value)} value={newHabit} />\n                <Grid>\n                    {dayweek.map((day) => (<Day onClick={() => handleDaySelected(day)} isSelected={selectedDays.includes(day.id)}>{day.label}</Day>))}\n                </Grid>\n                <CancelButton onClick={() => setDisplayForm('none')}>Cancelar</CancelButton>\n                <SaveButton type='submit'>Salvar</SaveButton>\n            </form>\n        </Container>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}