{"ast":null,"code":"var _jsxFileName = \"/Users/anahristoff/Library/Mobile Documents/com~apple~CloudDocs/Lukas/Driven/projetao-trackit/src/components/TodayPage/index.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"../Header\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { HabitsToday, HabitInfo, Container } from \"./styles\";\nimport axios from \"axios\";\nimport UserContext from \"../../contexts/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodayPage() {\n  _s();\n\n  const [habits, setHabits] = useState([]);\n  const {\n    token\n  } = useContext(UserContext);\n  const [isSelected, setIsSelected] = useState(false);\n  const dayweekTranslator = {\n    Sunday: \"Domingo\",\n    Monday: \"Segunda\",\n    Tuesday: \"Terça\",\n    Wednesday: \"Quarta\",\n    Thurday: \"Quinta\",\n    Friday: \"Sexta\",\n    Saturday: \"Sábado\"\n  };\n\n  const dayjs = require('dayjs');\n\n  const today = dayjs();\n  const todayEnglish = today.format(\"dddd\");\n  const date = today.format(\"DD/MM\");\n  const todayPortuguese = dayweekTranslator[todayEnglish];\n  const todayTitle = `${todayPortuguese}, ${date}`;\n  useEffect(() => {\n    const promise = axios.get('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/today', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    promise.then(response => setHabits(response.data));\n    promise.catch(error => console.log(error.response));\n  }, []);\n\n  function handleSelected(habit) {\n    console.log(habit.id);\n    console.log(habit.done);\n    console.log(token);\n    const request = axios.post(`https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${habit.id}/check`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    request.then(response => console.log(response));\n    request.catch(error => console.log(error.response));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: todayTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HabitsToday, {\n      children: habits.map(habit => /*#__PURE__*/_jsxDEV(HabitInfo, {\n        children: [habit.name, habit.currentSequence, /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n          onClick: () => handleSelected(habit),\n          isSelected: habit.done,\n          name: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodayPage, \"wcwuab7Fi3cDH5YWVMbeUSusJf0=\");\n\n_c = TodayPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodayPage\");","map":{"version":3,"sources":["/Users/anahristoff/Library/Mobile Documents/com~apple~CloudDocs/Lukas/Driven/projetao-trackit/src/components/TodayPage/index.js"],"names":["Header","React","useState","useEffect","useContext","HabitsToday","HabitInfo","Container","axios","UserContext","TodayPage","habits","setHabits","token","isSelected","setIsSelected","dayweekTranslator","Sunday","Monday","Tuesday","Wednesday","Thurday","Friday","Saturday","dayjs","require","today","todayEnglish","format","date","todayPortuguese","todayTitle","promise","get","headers","Authorization","then","response","data","catch","error","console","log","handleSelected","habit","id","done","request","post","map","name","currentSequence"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,SAAjC,QAAkD,UAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAYT,UAAU,CAACK,WAAD,CAA5B;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMc,iBAAiB,GAAG;AACtBC,IAAAA,MAAM,EAAE,SADc;AAEtBC,IAAAA,MAAM,EAAE,SAFc;AAGtBC,IAAAA,OAAO,EAAE,OAHa;AAItBC,IAAAA,SAAS,EAAE,QAJW;AAKtBC,IAAAA,OAAO,EAAE,QALa;AAMtBC,IAAAA,MAAM,EAAE,OANc;AAOtBC,IAAAA,QAAQ,EAAE;AAPY,GAA1B;;AASA,QAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,QAAMC,KAAK,GAAGF,KAAK,EAAnB;AACA,QAAMG,YAAY,GAAGD,KAAK,CAACE,MAAN,CAAa,MAAb,CAArB;AACA,QAAMC,IAAI,GAAGH,KAAK,CAACE,MAAN,CAAa,OAAb,CAAb;AACA,QAAME,eAAe,GAAGd,iBAAiB,CAACW,YAAD,CAAzC;AACA,QAAMI,UAAU,GAAI,GAAED,eAAgB,KAAID,IAAK,EAA/C;AAGA1B,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM6B,OAAO,GAAGxB,KAAK,CAACyB,GAAN,CAAU,yEAAV,EAAqF;AACjGC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,UAAStB,KAAM;AAD1B;AADwF,KAArF,CAAhB;AAKAmB,IAAAA,OAAO,CAACI,IAAR,CAAaC,QAAQ,IAAIzB,SAAS,CAACyB,QAAQ,CAACC,IAAV,CAAlC;AACAN,IAAAA,OAAO,CAACO,KAAR,CAAcC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACH,QAAlB,CAAvB;AACH,GARQ,EAQN,EARM,CAAT;;AAUA,WAASM,cAAT,CAAwBC,KAAxB,EAA+B;AAC3BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,EAAlB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACE,IAAlB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY7B,KAAZ;AACA,UAAMkC,OAAO,GAAGvC,KAAK,CAACwC,IAAN,CACX,qEAAoEJ,KAAK,CAACC,EAAG,QADlE,EAC2E;AACvFX,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,UAAStB,KAAM;AAD1B;AAD8E,KAD3E,CAAhB;AAMAkC,IAAAA,OAAO,CAACX,IAAR,CAAaC,QAAQ,IAAII,OAAO,CAACC,GAAR,CAAYL,QAAZ,CAAzB;AACAU,IAAAA,OAAO,CAACR,KAAR,CAAcC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACH,QAAlB,CAAvB;AAEH;;AAGD,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,WAAD;AAAA,gBACKpB,MAAM,CAACsC,GAAP,CAAYL,KAAD,iBACR,QAAC,SAAD;AAAA,mBACKA,KAAK,CAACM,IADX,EAEKN,KAAK,CAACO,eAFX,eAGI;AAAU,UAAA,OAAO,EAAE,MAAMR,cAAc,CAACC,KAAD,CAAvC;AAAgD,UAAA,UAAU,EAAEA,KAAK,CAACE,IAAlE;AAAwE,UAAA,IAAI,EAAC;AAA7E;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAhEuBpC,S;;KAAAA,S","sourcesContent":["import Header from \"../Header\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { HabitsToday, HabitInfo, Container } from \"./styles\";\nimport axios from \"axios\";\nimport UserContext from \"../../contexts/UserContext\";\n\nexport default function TodayPage() {\n    const [habits, setHabits] = useState([]);\n    const { token } = useContext(UserContext);\n    const [isSelected, setIsSelected] = useState(false);\n    const dayweekTranslator = {\n        Sunday: \"Domingo\",\n        Monday: \"Segunda\",\n        Tuesday: \"Terça\",\n        Wednesday: \"Quarta\",\n        Thurday: \"Quinta\",\n        Friday: \"Sexta\",\n        Saturday: \"Sábado\"\n    };\n    const dayjs = require('dayjs');\n    const today = dayjs();\n    const todayEnglish = today.format(\"dddd\");\n    const date = today.format(\"DD/MM\")\n    const todayPortuguese = dayweekTranslator[todayEnglish];\n    const todayTitle = `${todayPortuguese}, ${date}`;\n\n\n    useEffect(() => {\n        const promise = axios.get('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/today', {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        });\n        promise.then(response => setHabits(response.data) );\n        promise.catch(error => console.log(error.response));\n    }, []);\n\n    function handleSelected(habit) {\n        console.log(habit.id);\n        console.log(habit.done);\n        console.log(token);\n        const request = axios.post(\n            `https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${habit.id}/check`, {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        });\n        request.then(response => console.log(response));\n        request.catch(error => console.log(error.response));\n        \n    }\n\n\n    return (\n        <Container>\n            <Header />\n            <h3>{todayTitle}</h3>\n            <HabitsToday>           \n                {habits.map((habit) => (\n                    <HabitInfo>\n                        {habit.name}\n                        {habit.currentSequence}\n                        <ion-icon onClick={() => handleSelected(habit)} isSelected={habit.done} name=\"checkbox\"></ion-icon>\n                    </HabitInfo>\n                    \n                ))}  \n            </HabitsToday>\n            \n        </Container>\n    );\n}"]},"metadata":{},"sourceType":"module"}