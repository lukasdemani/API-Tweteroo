{"ast":null,"code":"var _jsxFileName = \"/Users/anahristoff/Library/Mobile Documents/com~apple~CloudDocs/Lukas/Driven/projetao-trackit/src/components/Footer/index.js\",\n    _s = $RefreshSig$();\n\nimport { Container, StyledLink, TodayButton } from \"./styles\";\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { useContext, useState } from \"react\";\nimport UserContext from \"../../contexts/UserContext\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Footer(_ref) {\n  _s();\n\n  let {\n    progress\n  } = _ref;\n  const {\n    token\n  } = useContext(UserContext);\n  const [habits, setHabits] = useState([]);\n  const promise = axios.get('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/today', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  promise.then(response => handleProgress(response.data));\n  promise.catch(error => console.log(error.response));\n\n  function handleProgress(habits) {\n    let count = 0;\n    let progressValue = 0;\n    habits.map(habit => habit.done && count++);\n    progressValue = count / habits.length * 100;\n    setProgress(progressValue);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(StyledLink, {\n      to: \"/habitos\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"H\\xE1bitos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodayButton, {\n      children: /*#__PURE__*/_jsxDEV(CircularProgressbarWithChildren, {\n        value: progress,\n        styles: buildStyles({\n          pathColor: '#ffffff',\n          trailColor: \"#52B6FF\"\n        }),\n        children: /*#__PURE__*/_jsxDEV(StyledLink, {\n          to: \"/hoje\",\n          children: \"Hoje\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(StyledLink, {\n      to: \"/historico\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hist\\xF3rico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Footer, \"LS3NieUwCVjJsCzcI68WHMDGx6I=\");\n\n_c = Footer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"sources":["/Users/anahristoff/Library/Mobile Documents/com~apple~CloudDocs/Lukas/Driven/projetao-trackit/src/components/Footer/index.js"],"names":["Container","StyledLink","TodayButton","CircularProgressbarWithChildren","buildStyles","useContext","useState","UserContext","axios","Footer","progress","token","habits","setHabits","promise","get","headers","Authorization","then","response","handleProgress","data","catch","error","console","log","count","progressValue","map","habit","done","length","setProgress","pathColor","trailColor"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,WAAhC,QAAmD,UAAnD;AACA,SAASC,+BAAT,EAA0CC,WAA1C,QAA6D,4BAA7D;AACA,OAAO,4CAAP;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,MAAT,OAA8B;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAYN,UAAU,CAACE,WAAD,CAA5B;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMQ,OAAO,GAAGN,KAAK,CAACO,GAAN,CAAU,yEAAV,EAAqF;AACjGC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAG,UAASN,KAAM;AAD1B;AADwF,GAArF,CAAhB;AAKAG,EAAAA,OAAO,CAACI,IAAR,CAAaC,QAAQ,IAAIC,cAAc,CAACD,QAAQ,CAACE,IAAV,CAAvC;AACAP,EAAAA,OAAO,CAACQ,KAAR,CAAcC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACJ,QAAlB,CAAvB;;AAEA,WAASC,cAAT,CAAwBR,MAAxB,EAA+B;AAC3B,QAAIc,KAAK,GAAG,CAAZ;AACA,QAAIC,aAAa,GAAG,CAApB;AACAf,IAAAA,MAAM,CAACgB,GAAP,CAAYC,KAAD,IAAWA,KAAK,CAACC,IAAN,IAAcJ,KAAK,EAAzC;AACAC,IAAAA,aAAa,GAAKD,KAAK,GAACd,MAAM,CAACmB,MAAd,GAAsB,GAAvC;AACAC,IAAAA,WAAW,CAACL,aAAD,CAAX;AACH;;AAED,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,EAAE,EAAC,UAAf;AAAA,6BAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEQ,QAAC,WAAD;AAAA,6BACI,QAAC,+BAAD;AAAiC,QAAA,KAAK,EAAEjB,QAAxC;AAAkD,QAAA,MAAM,EAAEN,WAAW,CAAC;AAAC6B,UAAAA,SAAS,EAAE,SAAZ;AAAuBC,UAAAA,UAAU,EAAE;AAAnC,SAAD,CAArE;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,EAAE,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFR,eAOI,QAAC,UAAD;AAAY,MAAA,EAAE,EAAC,YAAf;AAAA,6BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAhCuBzB,M;;KAAAA,M","sourcesContent":["import { Container, StyledLink, TodayButton } from \"./styles\";\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { useContext, useState } from \"react\";\nimport UserContext from \"../../contexts/UserContext\";\nimport axios from \"axios\";\n\nexport default function Footer({ progress }) {\n    const { token } = useContext(UserContext);\n    const [habits, setHabits] = useState([]);\n\n    const promise = axios.get('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/today', {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    });\n    promise.then(response => handleProgress(response.data));\n    promise.catch(error => console.log(error.response));\n\n    function handleProgress(habits){\n        let count = 0;\n        let progressValue = 0;\n        habits.map((habit) => habit.done && count++);\n        progressValue = ((count/habits.length)*100);\n        setProgress(progressValue);\n    }\n\n    return (\n        <Container>\n            <StyledLink to='/habitos'><p>Hábitos</p></StyledLink>\n                <TodayButton>\n                    <CircularProgressbarWithChildren value={progress} styles={buildStyles({pathColor: '#ffffff', trailColor: \"#52B6FF\"})}>\n                        <StyledLink to=\"/hoje\">Hoje</StyledLink>\n                    </CircularProgressbarWithChildren>\n                </TodayButton>\n            <StyledLink to='/historico'><p>Histórico</p></StyledLink>\n            \n        </Container>\n    )\n}"]},"metadata":{},"sourceType":"module"}