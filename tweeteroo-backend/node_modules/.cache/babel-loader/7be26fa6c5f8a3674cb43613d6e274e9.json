{"ast":null,"code":"var _jsxFileName = \"/Users/anahristoff/Library/Mobile Documents/com~apple~CloudDocs/Lukas/Driven/projetao-trackit/src/components/TodayPage/index.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"../Header\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { HabitsToday, HabitInfo, Container } from \"./styles\";\nimport axios from \"axios\";\nimport UserContext from \"../../contexts/UserContext\";\nimport Footer from \"../Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodayPage(_ref) {\n  _s();\n\n  let {\n    image,\n    progress,\n    setProgress\n  } = _ref;\n  const [habits, setHabits] = useState([]);\n  const {\n    token\n  } = useContext(UserContext);\n  const [isSelected, setIsSelected] = useState(false);\n  const dayweekTranslator = {\n    Sunday: \"Domingo\",\n    Monday: \"Segunda\",\n    Tuesday: \"Terça\",\n    Wednesday: \"Quarta\",\n    Thurday: \"Quinta\",\n    Friday: \"Sexta\",\n    Saturday: \"Sábado\"\n  };\n\n  const dayjs = require('dayjs');\n\n  const today = dayjs();\n  const todayEnglish = today.format(\"dddd\");\n  const date = today.format(\"DD/MM\");\n  const todayPortuguese = dayweekTranslator[todayEnglish];\n  const todayTitle = `${todayPortuguese}, ${date}`;\n  const colorProgress = progress == 0 ? true : false;\n  const [renderize, setRenderize] = useState(false);\n  console.log(colorProgress);\n  useEffect(() => {\n    const promise = axios.get('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/today', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    promise.then(response => setHabits(response.data));\n    promise.catch(error => console.log(error.response));\n  }, [renderize]);\n\n  function handleSelected(habit) {\n    if (!habit.done) {\n      const request = axios.post(`https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${habit.id}/check`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      request.then(setRenderize(!renderize));\n      request.catch(error => console.log(error.response));\n    } else {\n      const request = axios.post(`https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${habit.id}/uncheck`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      request.then(setRenderize(!renderize));\n      request.catch(error => console.log(error.response));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    colorText: colorProgress,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      image: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: todayTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: colorProgress ? \"Nenhum hábito concluído hoje\" : `${progress}% dos hábitos concluídos`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HabitsToday, {\n      children: habits.map(habit => /*#__PURE__*/_jsxDEV(HabitInfo, {\n        isSelected: habit.done,\n        isRecord: habit.currentSequence === habit.highestSequence && habit.highestSequence > 0,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: habit.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sequ\\xEAncia atual: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"current-days\",\n            children: [habit.currentSequence, \" dias\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Seu recorde: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"record\",\n            children: [habit.highestSequence, \" dias\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n          onClick: () => handleSelected(habit),\n          name: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      progress: progress,\n      setProgress: setProgress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodayPage, \"CqYPQyza1TcyzM8WsE9KFF3RPtc=\");\n\n_c = TodayPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodayPage\");","map":{"version":3,"sources":["/Users/anahristoff/Library/Mobile Documents/com~apple~CloudDocs/Lukas/Driven/projetao-trackit/src/components/TodayPage/index.js"],"names":["Header","React","useState","useEffect","useContext","HabitsToday","HabitInfo","Container","axios","UserContext","Footer","TodayPage","image","progress","setProgress","habits","setHabits","token","isSelected","setIsSelected","dayweekTranslator","Sunday","Monday","Tuesday","Wednesday","Thurday","Friday","Saturday","dayjs","require","today","todayEnglish","format","date","todayPortuguese","todayTitle","colorProgress","renderize","setRenderize","console","log","promise","get","headers","Authorization","then","response","data","catch","error","handleSelected","habit","done","request","post","id","map","currentSequence","highestSequence","name"],"mappings":"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","sourcesContent":["import Header from \"../Header\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { HabitsToday, HabitInfo, Container } from \"./styles\";\nimport axios from \"axios\";\nimport UserContext from \"../../contexts/UserContext\";\nimport Footer from \"../Footer\";\n\nexport default function TodayPage({ image, progress, setProgress }) {\n    const [habits, setHabits] = useState([]);\n    const { token } = useContext(UserContext);\n    const [isSelected, setIsSelected] = useState(false);\n    const dayweekTranslator = {\n        Sunday: \"Domingo\",\n        Monday: \"Segunda\",\n        Tuesday: \"Terça\",\n        Wednesday: \"Quarta\",\n        Thurday: \"Quinta\",\n        Friday: \"Sexta\",\n        Saturday: \"Sábado\"\n    };\n    const dayjs = require('dayjs');\n    const today = dayjs();\n    const todayEnglish = today.format(\"dddd\");\n    const date = today.format(\"DD/MM\")\n    const todayPortuguese = dayweekTranslator[todayEnglish];\n    const todayTitle = `${todayPortuguese}, ${date}`;\n    const colorProgress = (progress==0 ? true : false);\n    const [renderize, setRenderize] = useState(false);\n    console.log(colorProgress);\n\n    useEffect(() => {\n        const promise = axios.get('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/today', {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        });\n        promise.then(response => setHabits(response.data) );\n        promise.catch(error => console.log(error.response));\n    }, [renderize]);\n\n    function handleSelected(habit) {\n        if (!habit.done) {\n            const request = axios.post(\n                `https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${habit.id}/check`, {}, {\n                headers: {\n                    Authorization: `Bearer ${token}`\n                }\n            });\n            request.then(setRenderize(!renderize));\n            request.catch(error => console.log(error.response));\n        }else{\n            const request = axios.post(\n                `https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${habit.id}/uncheck`, {}, {\n                headers: {\n                    Authorization: `Bearer ${token}`\n                }\n            });\n            request.then(setRenderize(!renderize));\n            request.catch(error => console.log(error.response));\n        }\n\n        \n        \n    }\n\n\n    return (\n        <Container colorText={colorProgress}>\n            <Header image={image}/>\n            <h3>{todayTitle}</h3>\n            <h5 >{\n                colorProgress ? \n                    \"Nenhum hábito concluído hoje\"\n                :   \n                    `${progress}% dos hábitos concluídos`}        \n            </h5>\n            <HabitsToday>           \n                {habits.map((habit) => (\n                    <HabitInfo isSelected={habit.done} isRecord={habit.currentSequence===habit.highestSequence && habit.highestSequence>0}>\n                        <h4>{habit.name}</h4>\n                        \n                        <p>Sequência atual: <span className='current-days'>{habit.currentSequence} dias</span></p>\n                        <p>Seu recorde: <span className='record'>{habit.highestSequence} dias</span></p>\n                        <ion-icon onClick={() => handleSelected(habit)}  name=\"checkbox\"></ion-icon>\n                    </HabitInfo>\n                    \n                ))}  \n            </HabitsToday>\n            <Footer progress={progress} setProgress={setProgress}/>\n        </Container>\n    );\n}"]},"metadata":{},"sourceType":"module"}