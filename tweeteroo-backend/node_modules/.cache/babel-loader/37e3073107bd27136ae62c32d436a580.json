{"ast":null,"code":"var _jsxFileName = \"/Users/anahristoff/Library/Mobile Documents/com~apple~CloudDocs/Lukas/Driven/projetao-trackit/src/components/LoginPage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport BigLogo from '../BigLogo';\nimport { Container, StyledLink } from './styles';\nimport axios from 'axios';\nimport Input from '../Input';\nimport Button from '../Button';\nimport UserContext from '../../contexts/UserContext';\nimport Loader from \"react-loader-spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage(_ref) {\n  _s();\n\n  let {\n    setImage\n  } = _ref;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const {\n    setToken\n  } = useContext(UserContext);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleLogin(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    const promise = axios.post('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/auth/login', {\n      email,\n      password\n    });\n    promise.then(response => {\n      setToken(response.data.token);\n      setImage(response.data.image);\n      navigate('/habitos');\n    });\n    promise.catch(error => console.log(error.response));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(BigLogo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        onChange: e => setEmail(e.target.value),\n        value: email,\n        placeholder: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        onChange: e => setPassword(e.target.value),\n        value: password,\n        placeholder: \"senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"\\\"Entrar\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StyledLink, {\n      to: \"/cadastro\",\n      children: \"N\\xE3o tem uma conta? Cadastre-se!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"hlMQUzymQixPKBsa54WdKM7gp/M=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/anahristoff/Library/Mobile Documents/com~apple~CloudDocs/Lukas/Driven/projetao-trackit/src/components/LoginPage/index.js"],"names":["useContext","useState","useNavigate","BigLogo","Container","StyledLink","axios","Input","Button","UserContext","Loader","LoginPage","setImage","email","setEmail","password","setPassword","navigate","setToken","isLoading","setIsLoading","handleLogin","e","preventDefault","promise","post","then","response","data","token","image","catch","error","console","log","target","value"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,UAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,eAAe,SAASC,SAAT,OAAiC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMgB,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAelB,UAAU,CAACS,WAAD,CAA/B;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,KAAD,CAA1C;;AAEA,WAASoB,WAAT,CAAqBC,CAArB,EAAwB;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMI,OAAO,GAAGlB,KAAK,CAACmB,IAAN,CAAW,uEAAX,EAAoF;AAChGZ,MAAAA,KADgG;AAEhGE,MAAAA;AAFgG,KAApF,CAAhB;AAIAS,IAAAA,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAI;AACrBT,MAAAA,QAAQ,CAACS,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAR;AACAjB,MAAAA,QAAQ,CAACe,QAAQ,CAACC,IAAT,CAAcE,KAAf,CAAR;AACAb,MAAAA,QAAQ,CAAC,UAAD,CAAR;AACH,KAJD;AAKAO,IAAAA,OAAO,CAACO,KAAR,CAAcC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACL,QAAlB,CAAvB;AACH;;AAED,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEN,WAAhB;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,QAAQ,EAAGC,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACa,MAAF,CAASC,KAAV,CAA7C;AAA+D,QAAA,KAAK,EAAEvB,KAAtE;AAA6E,QAAA,WAAW,EAAC;AAAzF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAGS,CAAD,IAAON,WAAW,CAACM,CAAC,CAACa,MAAF,CAASC,KAAV,CAAnD;AAAqE,QAAA,KAAK,EAAErB,QAA5E;AAAsF,QAAA,WAAW,EAAC;AAAlG;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAaI,QAAC,UAAD;AAAY,MAAA,EAAE,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAvCuBJ,S;UAGHT,W;;;KAHGS,S","sourcesContent":["import { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport BigLogo from '../BigLogo';\nimport { Container, StyledLink } from './styles';\nimport axios from 'axios';\nimport Input from '../Input';\nimport Button from '../Button';\nimport UserContext from '../../contexts/UserContext';\nimport Loader from \"react-loader-spinner\";\n\nexport default function LoginPage({ setImage }) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n    const { setToken } = useContext(UserContext);\n    const [isLoading, setIsLoading] = useState(false);\n\n    function handleLogin(e) {\n        e.preventDefault();\n        setIsLoading(true);\n        const promise = axios.post('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/auth/login', {\n            email,\n            password\n        });\n        promise.then(response => {\n            setToken(response.data.token)\n            setImage(response.data.image)\n            navigate('/habitos')\n        });\n        promise.catch(error => console.log(error.response));\n    }\n\n    return (\n        <Container>\n            <BigLogo />\n            <form onSubmit={handleLogin}>\n                <Input type='email' onChange={(e) => setEmail(e.target.value)} value={email} placeholder='email'/>\n                <Input type='password' onChange={(e) => setPassword(e.target.value)} value={password} placeholder='senha'/>\n                <Button type=\"submit\">\n                    \n                    \n                        \"Entrar\"\n\n                    \n                    </Button>\n            </form>\n            <StyledLink to=\"/cadastro\">NÃ£o tem uma conta? Cadastre-se!</StyledLink>\n        </Container>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}